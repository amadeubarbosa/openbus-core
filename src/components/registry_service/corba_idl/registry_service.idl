#ifndef RS_IDL
#define RS_IDL

#include "core.idl"
#include "access_control_service.idl"

module OpenBus {

/**
 * \brief Módulo do Serviço de Registro.
 */
module RS {

typedef sequence<string> PropertyValue;

/**
 * \brief Representa uma propriedade.
 */
struct Property {
    string name;
    PropertyValue value;
};
typedef sequence<Property> Properties;

/**
 * \brief Representa uma oferta de serviço.
 */
struct ServiceOffer {
    string type; /**< \brief O tipo do serviço. */
    string description; /**< \brief A descrição do serviço. */
    Properties properties; /**< \brief Propriedades. */
    Member member; /**< \brief O membro que está ofertando o serviço. */
};
typedef sequence<ServiceOffer> ServiceOffers;

/** \brief O identificador do registro de um serviço. */
typedef Identifier RegistryIdentifier;

/**
 * \brief Representa o serviço de registro.
 */
interface RegistryService {
    /**
     * \brief Registra uma oferta de serviço.
     *
     * \param credential A credencial de quem está registrando a oferta.
     * \param serviceOffer A oferta de serviço.
     *
     * \return Um identificador para o registro.
     */
    RegistryIdentifier register(in ACS::Credential credential, in ServiceOffer serviceOffer);

    /**
     * \brief Remove uma oferta de serviço.
     *
     * \param identifier O identificador do registro da oferta do serviço.
     *
     * \return \c true, caso a oferta de serviço seja removida, ou \c false,
     * caso contrário.
     */
    boolean unregister(in RegistryIdentifier identifier);

    /**
     * \brief Atualiza uma oferta de serviço.
     *
     * \param identifier O identificador do registro da oferta do serviço.
     * \param serviceOffer A nova oferta de serviço.
     *
     * \return \c true, caso a oferta de serviço seja atualizada, ou \c false,
     * caso contrário.
     */
    boolean refresh(in RegistryIdentifier identifier, in ServiceOffer serviceOffer);

    /**
     * \brief Realiza uma busca por ofertas que satisfaçam a determinados critérios.
     *
     * \param type O tipo de serviço
     * \param criteria Os critérios da busca.
     *
     * \return Os membros encontrados.
     */
    ServiceOffers find (in string type, in Properties criteria);
};

/**
 * \brief Membro que representa o serviço de registro.
 *
 * Facetas:
 * - RegistryService
 */
interface RegistryServiceComponent : Member {
};
};
};

#endif
