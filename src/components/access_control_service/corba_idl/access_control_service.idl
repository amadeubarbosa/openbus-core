#ifndef AS_IDL
#define AS_IDL

#include "scs.idl"
#include "core.idl"

module OpenBus {

module RS {
    interface RegistryService;
};

module AS {

typedef Identifier CredentialIdentifier;
typedef Identifier LoginIdentifier;

struct Credential {
    CredentialIdentifier identifier;
    string entityName;
};

struct CredentialLoginIdentifier {
    Credential credential;
    LoginIdentifier loginIdentifier;
};

interface CredentialManagerObserver {
    void credentialWasDeleted(in Credential credential);
};

interface AccessControlService {
    LoginIdentifier loginByCredential (in Credential credential);
    CredentialLoginIdentifier loginByPassword (in string name, in string password);
    string getToken(in string name);
    CredentialLoginIdentifier loginByCertificate (in string name, in string answer);
    boolean logout (in LoginIdentifier identifier);
    boolean isValid (in Credential credential);
    RS::RegistryService getRegistryService (in Credential credential);
    boolean setRegistryService (in Credential credential, in RS::RegistryService registryService);
    void addObserver(in CredentialManagerObserver observer);
    void removeObserver(in CredentialManagerObserver observer);
};

interface AccessControlServiceComponent : SCS::IComponent {
};

};

};

#endif
