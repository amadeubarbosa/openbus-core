#ifndef AS_IDL
#define AS_IDL

#include "core.idl"

module OpenBus {

module RS {
    interface RegistryService;
};

module AS {

typedef Identifier CredentialIdentifier;
typedef Identifier LoginIdentifier;
typedef Identifier CredentialObserverIdentifier;

typedef sequence<CredentialIdentifier> CredentialIdentifiers;

struct Credential {
    CredentialIdentifier identifier;
    string memberName;
};

struct CredentialLoginIdentifier {
    Credential credential;
    LoginIdentifier loginIdentifier;
};

interface CredentialManagerObserver {
    void credentialWasDeleted(in Credential credential);
};

interface AccessControlService {
    LoginIdentifier loginByCredential (in Credential credential);
    CredentialLoginIdentifier loginByPassword (in string name, in string password);
    string getToken(in string name);
    CredentialLoginIdentifier loginByCertificate (in string name, in string answer);
    boolean logout (in LoginIdentifier identifier);
    boolean isValid (in Credential credential);
    RS::RegistryService getRegistryService (in Credential credential);
    boolean setRegistryService (in Credential credential, in RS::RegistryService registryService);
    CredentialObserverIdentifier addObserver(in CredentialManagerObserver observer, in CredentialIdentifiers credentialIdentifiers);
    boolean removeObserver(in CredentialObserverIdentifier identifier);
    boolean addCredentialToObserver(in CredentialObserverIdentifier observerIdentifier, in CredentialIdentifier credentialIdentifier);
    boolean removeCredentialFromObserver(in CredentialObserverIdentifier observerIdentifier, in CredentialIdentifier credentialIdentifier);
};

interface AccessControlServiceComponent : Member {
};

};

};

#endif
