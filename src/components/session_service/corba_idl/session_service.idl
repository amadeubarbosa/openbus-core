#ifndef SS_IDL
#define SS_IDL

#include "core.idl"
#include "access_control_service.idl"

module OpenBus {

/**
 * \brief Módulo do Serviço de Sessão.
 */
module SS {

/** \brief Representa o identificador de uma sessão. */
typedef Identifier SessionIdentifier;
/** \brief Representa o identificador do membro de uma sessão. */
typedef Identifier MemberIdentifier;

/**
 * \brief Representa uma sessão.
 */
interface ISession {
    /**
     * \brief Obtém o identificador da sessão.
     *
     * \return O identificador da sessão.
     */
    SessionIdentifier getIdentifier();
    /**
     * \brief Adiciona um membro à sessão.
     *
     * \param member O membro.
     *
     * \return O identificador do membro.
     */
    MemberIdentifier addMember(in IMember member);
    /**
     * \brief Remove um membro da sessão.
     *
     * \param memberIdentifier O identificador do membro.
     *
     * \return \c true caso o membro tenha sido removido, ou \c false, caso contrário.
     */
    boolean removeMember(in MemberIdentifier memberIdentifier);
    /**
     * \brief Obtém um membro da sessão.
     *
     * \param memberName O nome do membro.
     *
     * \return O membro ou \c nil, caso o membro não esteja participando da sessão.
     */
    IMember getMember(in string memberName);
    /**
     * \brief Obtém todos os membros da sessão.
     *
     * \return A sequência de membros. Pode estar vazia caso não existam membros participando da
     * sessão.
     */
    MemberList getMembers();
};
/** \brief Representa uma sequência de sessões. */
typedef sequence<ISession> SessionList;

/**
 * \brief Representa o serviço de sessão.
 */
interface ISessionService {
    /**
     * \brief Cria uma sessão associada a uma credencial.
     *
     * \param aCredential A credencial.
     *
     * \return A sessão criada ou \c nil, caso a credencial esteja inválida.
     */
    ISession createSession(in ACS::Credential aCredential);
    /**
     * \brief Remove a sessão associada a uma credencial.
     *
     * \param aCredential A credencial à qual a sessão está ligada.
     *
     * \return \c true caso a sessão tenha sido removida, ou \c false, caso contrário.
     */
    boolean removeSession(in ACS::Credential aCredential);
    /**
     * \brief Obtém a sessão associada a uma credencial.
     *
     * \param aCredential A credencial à qual a sessão está ligada.
     *
     * \return A sessão ou \c nil, caso a credencial esteja inválida ou não exista sessão
     * associada à credencial.
     */
    ISession getSession(in ACS::Credential aCredential);
    /**
     * \brief Obtém todas as sessões nas quais o membro participa.
     *
     * \param memberName O nome do membro.
     *
     * \return As sessões nas quais o membro participa. Caso o membro não esteja participando
     * de nenhuma sessão, a sequência estará vazia.
     */
    SessionList getSessions(in string memberName);
};

/**
 * \brief Membro que representa o serviço de sessão.
 *
 * Facetas:
 * - SessionService
 */
interface ISessionServiceComponent : IMember {
};

};

};

#endif
