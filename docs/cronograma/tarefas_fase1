
FASE 1: PROTÓTIPO COM SERVIÇO DE PROJETOS
-----------------------------------------

1) INFRAESTRUTURA BÁSICA (dependente, em parte, de recursos externos)
   =====================

  1.1 Implementação do SCS (funcionalidade básica IComponent, IMetaInterface)
      - Java, C++, Lua

  1.2 Implementação da biblioteca Lua para OpenSSL

---> Rodrigo?

  1.3 Nova implementação do OiL, com suporte a interceptadores

2) DOCUMENTAÇÂO DO PROTÓTIPO (FASE 1)
   ==================================

  2.1 Finalizar Documentação Preliminar:
      - Mecanismos e Serviços Básicos, Serviço de Projetos, Casos de Usos

---> Podemos considerar fechado?

  2.2 Complementação da Documentação
      -> várias dependências
   

3) MECANISMOS BÁSICOS
   ===============================

  3.1 Mecanismo de leasing
      - implementar o mecanismo de renovação para membro
      - implementar o mecanismo de renovação para serviço

  3.2 Interceptação de Requisições
      - mecanismo para inclusão da credencial na requisição
      - obtenção e validação da credencial
      - repasse da credencial para "Current" (thread de invocação do serviço)

        Será necessário adicionar um mecanismo (simples) para prover 
        funcionalidade semelhante ao PICurrent (salvamento de info associada ao
        contexto da corotina corrente) para serviços em Lua

---> No momento estamos realizando testes do mecanismo de interceptação em 
     diferentes linguagens/ORBs (Java/Jacorb, Lua/OiL por enquanto) e a 
     compatibilidade entre eles (cliente/servidor em linguagens diferentes)

     Desses testes sairá o código para as bibliotecas a serem adicionadas a
     servidores e clientes.

     Estágio atual: transferência/recuperação de info via service context.
     Próximo passo: integração do mecanismo de controle de acesso/validação
                    de credenciais
 
4) SERVIÇO DE ACESSO
   =================

  4.1 Mecanismo de persistência de credenciais

---> Podemos considerar fechado?

  4.2 Incorporar o mecanismo de leasing
       -> dependência: 3.1

  4.3 Login via Certificado:
      - mecanismo de cadastro e persistencia de certificados
      - incorporar a biblioteca (Lua) do openSSL
        -> dependência: 1.2

  4.4 Incorporar interceptadores (para operações getRegistryService e logout)
       -> dependências: 3.2


5) SERVIÇO DE REGISTRO
   ===================

  5.1 Mecanismo de persistência de ofertas de serviço
      - preparar o repositório de ofertas para permitir o uso de um BD

  5.2 Incorporar interceptadores
       -> dependências: 1.3 e 3.2

  5.3 Autenticação via certificado
      -> dependência: 4.3

6) SERVIÇO DE SESSÃO
   =================

  6.1 Mecanismo de troca de mensagens entre membros de sessão

  6.2 Incorporar mecanismo de leasing (cliente/servidor)
      - manutenção de sessão + credencial
      -> dependências: 3.1 e 4.2

  6.3 Incorporar interceptadores
       -> dependências: 3.2

  6.4 Autenticação via certificado
      -> dependência: 4.3
     

7) SERVIÇO DE PROJETOS
   ===================

  7.1 Implementação do procedimento comum a todos os serviços
      - autenticação (+leasing credencial)
      - exportação do serviço
      - incorporação de interceptadores

      -> dependências: 4, 5, 3.2, 3.1

  7.2 Implementação do serviço propriamente dito (JAVA/CSBASE)
      - Serviço de Dados
      - Serviço de Projetos

      -> dependência 7.1

8) CLIENTES BÁSICOS (C++, Java, Lua)
   ================

  8.1 Procedimento comum a todos os clientes
      - autenticação
      - leasing
      - incorporação de interceptadores
      - importação de oferta de serviço

      -> dependências: 4, 5, 3.2, 3.1

  8.2 Teste de uso do serviço de projetos sem uso de sessão
      -> dependência: 8.1, 7

9) TESTES DE USO DE SESSÃO
   =======================
  9.1 Procedimento de criação/formação de sessão envolvendo múltiplos clientes
      -> dependências: 8 , 6

  9.2 Teste de uso do serviço de projetos com uso de sessão
      -> dependências: 9.1 e 7


9) CRIAÇÂO DE BIBLIOTECAS
   ======================

  9.1 Construir bibliotecas para clientes: C++, Java
     - procedimento comum a todos os clientes
     - acesso ao serviço de projetos

     -> dependências: 8
  
  9.2 Construir bibliotecas para serviços: Java, C++
      - procedimento comum a todos os serviços

     -> dependências: 7
